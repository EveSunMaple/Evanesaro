---
import { format } from "date-fns";

interface Props {
    title: string;
    description?: string;
    date: Date;
    categories?: string[];
    tags?: string[];
    readingTime?: number;
    thumbnail?: string;
    slug: string;
}

const {
    title,
    description,
    date,
    categories = [],
    tags = [],
    readingTime,
    thumbnail,
    slug,
} = Astro.props;
---

<article
    class="blog-card group animate-fade-in"
    style={`--delay: ${Math.random() * 0.5}s`}
>
    {
        thumbnail && (
            <a href={`/blog/${slug}`} class="thumbnail-container">
                <img
                    src={thumbnail}
                    alt={title}
                    class="thumbnail"
                    width="800"
                    height="400"
                />
            </a>
        )
    }

    <div class="content">
        <header>
            <h2 class="title">
                <a href={`/blog/${slug}`}>{title}</a>
            </h2>

            <div class="meta">
                <time datetime={date.toISOString()}>
                    {format(date, "MMMM d, yyyy")}
                </time>
                {
                    readingTime && (
                        <span class="reading-time">
                            Â· {readingTime} min read
                        </span>
                    )
                }

                <div class="dropdown dropdown-hover dropdown-right">
                    <button
                        tabindex="0"
                        class="meta-trigger"
                        aria-label="Post metadata"
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="h-4 w-4"
                            viewBox="0 0 20 20"
                            fill="currentColor"
                        >
                            <path
                                fill-rule="evenodd"
                                d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
                                clip-rule="evenodd"></path>
                        </svg>
                        <span class="sr-only">Info</span>
                    </button>
                    <ul
                        tabindex="0"
                        class="dropdown-content menu p-2 shadow bg-base-200 rounded-box w-52"
                    >
                        {
                            (categories.length > 0 || tags.length > 0) && (
                                <li class="menu-title">
                                    <span>Metadata</span>
                                </li>
                            )
                        }
                        {
                            categories.length > 0 && (
                                <li class="meta-item">
                                    <div class="categories">
                                        <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            class="h-4 w-4"
                                            viewBox="0 0 20 20"
                                            fill="currentColor"
                                        >
                                            <path d="M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" />
                                        </svg>
                                        <span class="space-x-1">
                                            {categories.map(
                                                (category, index) => (
                                                    <>
                                                        {index > 0 && ", "}
                                                        <a
                                                            href={`/category/${category.toLowerCase()}`}
                                                            class="hover:text-primary transition-colors"
                                                        >
                                                            {category}
                                                        </a>
                                                    </>
                                                ),
                                            )}
                                        </span>
                                    </div>
                                </li>
                            )
                        }
                        {
                            tags.length > 0 && (
                                <li class="meta-item">
                                    <div class="tags">
                                        <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            class="h-4 w-4"
                                            viewBox="0 0 20 20"
                                            fill="currentColor"
                                        >
                                            <path
                                                fill-rule="evenodd"
                                                d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z"
                                                clip-rule="evenodd"
                                            />
                                        </svg>
                                        <span class="space-x-1">
                                            {tags.map((tag, index) => (
                                                <>
                                                    {index > 0 && ", "}
                                                    <a
                                                        href={`/tag/${tag.toLowerCase()}`}
                                                        class="hover:text-primary transition-colors"
                                                    >
                                                        {tag}
                                                    </a>
                                                </>
                                            ))}
                                        </span>
                                    </div>
                                </li>
                            )
                        }
                    </ul>
                </div>
            </div>
        </header>

        {description && <p class="description">{description}</p>}

        <a href={`/blog/${slug}`} class="read-more group">
            Read More
            <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4 transition-transform group-hover:translate-x-1"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
            </svg>
        </a>
    </div>
</article>

<style>
    .blog-card {
        font-family:
            system-ui,
            -apple-system,
            BlinkMacSystemFont,
            "Segoe UI",
            Roboto,
            Oxygen,
            Ubuntu,
            Cantarell,
            "Open Sans",
            "Helvetica Neue",
            sans-serif;
        margin-bottom: 2rem;
        transition: transform 0.2s ease-in-out;
        opacity: 0;
        animation: fadeIn 0.5s ease-out forwards;
        animation-delay: var(--delay);
    }

    .blog-card:hover {
        transform: scale(1.02);
    }

    .thumbnail-container {
        display: block;
        margin-bottom: 1rem;
        overflow: hidden;
    }

    .thumbnail {
        width: 100%;
        height: auto;
        aspect-ratio: 2/1;
        object-fit: cover;
        transition: transform 0.2s ease-in-out;
    }

    .thumbnail-container:hover .thumbnail {
        transform: scale(1.05);
    }

    .content {
        padding: 0 1rem;
    }

    .title {
        font-size: clamp(1.25rem, 5vw, 1.5rem);
        line-height: 1.2;
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

    .title a {
        color: inherit;
        text-decoration: none;
        transition: color 0.2s ease-in-out;
    }

    .title a:hover {
        color: hsl(var(--p));
    }

    .meta {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        color: hsl(var(--bc) / 0.7);
        margin-bottom: 1rem;
    }

    .meta-trigger {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        padding: 0.25rem;
        color: hsl(var(--bc) / 0.7);
        transition: color 0.2s ease-in-out;
    }

    .meta-trigger:hover {
        color: hsl(var(--bc));
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
    }

    .description {
        color: hsl(var(--bc) / 0.8);
        line-height: 1.6;
        margin-bottom: 1rem;
        max-width: 65ch;
    }

    .read-more {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        font-size: 0.875rem;
        color: hsl(var(--p));
        text-decoration: none;
        transition: color 0.2s ease-in-out;
    }

    .read-more:hover {
        color: hsl(var(--pf));
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @media (max-width: 768px) {
        .content {
            padding: 0;
        }
    }
</style>
