---
import { format } from "date-fns";
import { Icon } from "astro-icon/components";

interface Props {
  title: string;
  description?: string;
  date: Date;
  categories?: string[];
  tags?: string[];
  readingTime?: number;
  thumbnail?: string;
  slug: string;
}

const { title, description, date, categories = [], tags = [], readingTime, thumbnail, slug } = Astro.props;
---

<article class="blog-card group animate-fade-in" style={`--delay: ${Math.random() * 0.5}s`}>
  <div transition:name=`image-${slug}`>
    {
      thumbnail && (
        <a href={`/blog/${slug}`} class="thumbnail-container">
          <img src={thumbnail} alt={title} class="thumbnail" width="800" height="400" />
        </a>
      )
    }
  </div>

  <div class="content">
    <header>
      <h2 class="title" transition:name=`title-${slug}`>
        <a href={`/blog/${slug}`}>{title}</a>
      </h2>

      <div class="meta">
        <time datetime={date.toISOString()}>
          <Icon name="lucide:calendar" class="h-4 w-4 inline-block mr-1" />
          {format(date, "MMMM d, yyyy")}
        </time>
        {
          readingTime && (
            <span class="reading-time">
              <Icon name="lucide:clock" class="h-4 w-4 inline-block mr-1" />
              {readingTime} min read
            </span>
          )
        }

        <div class="dropdown dropdown-hover dropdown-end">
          <button tabindex="0" class="meta-trigger" aria-label="Post metadata">
            <Icon name="lucide:info" class="h-4 w-4" />
            <span class="sr-only">Info</span>
          </button>
          <ul tabindex="0" class="dropdown-content menu p-2 shadow bg-base-200 rounded-box w-52 z-10">
            {
              (categories.length > 0 || tags.length > 0) && (
                <li class="menu-title">
                  <span>Metadata</span>
                </li>
              )
            }
            {
              categories.length > 0 && (
                <li class="meta-item">
                  <div class="categories">
                    <Icon name="lucide:folder" class="h-4 w-4" />
                    <span class="space-x-1">
                      {categories.map((category, index) => (
                        <>
                          {index > 0 && ", "}
                          <a href={`/category/${category.toLowerCase()}`} class="hover:text-primary transition-colors">
                            {category}
                          </a>
                        </>
                      ))}
                    </span>
                  </div>
                </li>
              )
            }
            {
              tags.length > 0 && (
                <li class="meta-item">
                  <div class="tags">
                    <Icon name="lucide:tag" class="h-4 w-4" />
                    <span class="space-x-1">
                      {tags.map((tag, index) => (
                        <>
                          {index > 0 && ", "}
                          <a href={`/tag/${tag.toLowerCase()}`} class="hover:text-primary transition-colors">
                            {tag}
                          </a>
                        </>
                      ))}
                    </span>
                  </div>
                </li>
              )
            }
          </ul>
        </div>
      </div>
    </header>

    {description && <p class="description">{description}</p>}

    <a href={`/blog/${slug}`} class="read-more group">
      Read More
      <Icon name="lucide:arrow-right" class="h-4 w-4 transition-transform group-hover:translate-x-1" />
    </a>
  </div>
</article>

<style>
  .blog-card {
    font-family:
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Open Sans",
      "Helvetica Neue",
      sans-serif;
    margin-bottom: 2rem;
    transition: transform 0.2s ease-in-out;
  }

  .blog-card:hover {
    transform: scale(1.02);
  }

  .thumbnail-container {
    display: block;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
    overflow: hidden;
  }

  .thumbnail {
    width: 100%;
    height: auto;
    aspect-ratio: 2/1;
    object-fit: cover;
    transition: transform 0.2s ease-in-out;
  }

  .thumbnail-container:hover .thumbnail {
    transform: scale(1.05);
  }

  .content {
    padding: 0 1rem;
  }

  .title {
    font-size: clamp(1.25rem, 5vw, 1.5rem);
    line-height: 1.2;
    margin-bottom: 0.5rem;
    font-weight: 600;
  }

  .title a {
    color: inherit;
    text-decoration: none;
    transition: color 0.2s ease-in-out;
  }

  .title a:hover {
    color: hsl(var(--p));
  }

  .meta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: hsl(var(--bc) / 0.7);
    margin-bottom: 1rem;
  }

  .meta-trigger {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.25rem;
    color: hsl(var(--bc) / 0.7);
    transition: color 0.2s ease-in-out;
  }

  .meta-trigger:hover {
    color: hsl(var(--bc));
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
  }

  .description {
    color: hsl(var(--bc) / 0.8);
    line-height: 1.6;
    margin-bottom: 1rem;
    max-width: 65ch;
  }

  .read-more {
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.875rem;
    color: hsl(var(--p));
    text-decoration: none;
    transition: color 0.2s ease-in-out;
  }

  .read-more:hover {
    color: hsl(var(--pf));
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (max-width: 768px) {
    .content {
      padding: 0;
    }
  }
</style>
